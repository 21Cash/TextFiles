#include <stdio.h>
#include <stdlib.h>

struct node {
    int data;
    struct node* left, *right;
};

struct node* make_node(int x) {
    struct node* newNode = (struct node*) malloc(sizeof(struct node));
    newNode->data = x;
    newNode->left = NULL;
    newNode->right = NULL;
}


struct node* insert(struct node* root, int x) {
    if(!root) {
        return make_node(x);
    }
    
    if(root->data < x) {
        root->right = insert(root->right, x);
    }
    else {
        root->left = insert(root->left, x);
    }
    
    return root;
}

struct node* deleteNode(struct node* root, int x) {
    if(!root) return root;
    
    if(root->data == x) {
        if(!root->left && !root->right) return NULL;
        if(root->left && !root->right) return root->left;
        if(!root->left && root->right) return root->right;
    }
    else if(root->data < x) {
        root->right = deleteNode(root->right, x);
    }
    else {
        root->left = deleteNode(root->left, x);
    }
    
    return root;
}

void inorder(struct node* root) {
    if(!root) return;
    
    inorder(root->left);
    printf("%d ", root->data);
    inorder(root->right);
}

int main() {
    
    printf("Enter node cnt : ");
    int n;
    scanf("%d", &n);
    
    struct node* root = NULL;
    for(int i = 0; i < n;i++) {
        int value;
        scanf("%d", &value);
        root = insert(root, value);
    }
    
    int toDel = -1;
    printf("Enter node to delete : ");
    scanf("%d", &toDel);
    
    root = deleteNode(root, toDel);
    
    printf("Inorder traversal after deletion : ");
    inorder(root);
    
    return 0;
}
